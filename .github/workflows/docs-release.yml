name: Deploy Documentation for Release version
on:
  pull_request:  # Remove it once it works
  # This workflow runs when the "Release" workflow completes successfully
  # It means that the version has been bumped and the release has been created so we can deploy the documentation for the new version
  workflow_run:
    workflows: ["Release"]
    types:
      - completed
    branches:
      - main
  workflow_dispatch:  # Manually Deploy Documentation
    inputs:
      version:
        required: true
        type: string

permissions:
  contents: write
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Configure Git Credentials
        run: |
          git config user.name github-actions[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com
      # Find python version
      - run: echo "python_version=$(< .github/workflows/python-version-ci)" >> $GITHUB_ENV
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.python_version }}
      - run: echo "cache_id=$(date --utc '+%V')" >> $GITHUB_ENV
      - uses: actions/cache@v4
        with:
          key: mkdocs-material-${{ env.cache_id }}
          path: .cache
          restore-keys: |
            mkdocs-material-
      - run: pip install -r requirements/docs.txt
      - name: Build and Deploy at Release
        working-directory: ./documentation
        run: |
          VERSION=$(git describe --tags --abbrev=0)
          echo "Deploying $VERSION"
          git fetch origin
          mike deploy --update-alias --push $VERSION latest
          mike set-default latest --push
        if: ${{ github.event_name != 'workflow_dispatch' }}
      - name: Build and Deploy Manually
        working-directory: ./documentation
        run: |
          VERSION=${{ inputs.version }}
          echo "Deploying ${{ inputs.version }}"
          git fetch origin
          mike deploy --update-alias --push $VERSION latest
          mike set-default latest --push
        if: ${{ github.event_name == 'workflow_dispatch' }}
